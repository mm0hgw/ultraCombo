combnG_unrolled <- function(x,n,k){
	i <- n
	j <- k
	ch <- superChoose(n,k)
	out <- vector('integer',k)
	if(class(ch)=='bigz'){
		ch <- gmp::as.bigq(ch)
		gmp <- TRUE
	}else{
		gmp <- FALSE
	}
	oldch <- ch
	while(j>1){
		while(x > (ch <- oldch * j / i)){
			x <- x - ch
			oldch <- oldch - ch
			i <- i - 1
		}
		out[k-j+1] = n-i+1
		oldch <- ch
		i <- i - 1
		j <- j - 1
	}
	out[k] <- as.integer(n-i+x)
	out
}

revCombnG_unrolled <- function(x,n){
	k <- length(x)
	ch <- superChoose(n-1,k-1)
	if(class(ch)=='bigz'){
		ch <- gmp::as.bigq(ch)
		gmp <- TRUE
	}else{
		gmp <- FALSE
	}
	out <- x[k] - x[k-1]
	i <- 1
	j <- 1
	while(k-i>0){
		if(x[i]-j == 0){
			ch <- ch * (k-i) / (n-j)
			i <- i + 1
			j <- j + 1
		}else{
			out <- out + ch
			ch <- ch - ch * (k-i) / (n-j)
			j <- j + 1
		}
	}
	if(gmp == TRUE){
		gmp::as.bigz(out)
	}else{
		out
	}
}

buildPackage::buildPackage('ultraCombo',check=1)

x <- 1
n <- 100
k <- 3
ch <- choose(n,k)

while(x <= ch){
	y <- print(revCombnG(print(combnG(x,n,k)),n))
	stopifnot(x==y)
	x <- x + 1
}
